@import url(http://fonts.googleapis.com/css?family=Open+Sans|Stint+Ultra+Expanded);

@import "settings";
@import "foundation";

@mixin retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}


html {
  background-color: #fafafa;  
  //background-color: #E9E4D9; // very light brown. Caused odd flashing when scrolling.
}

h1 {
  letter-spacing: rem-calc(2.8px);
}

h2 {
  margin-top: rem-calc(100);
}

blockquote {
  border-left: none;
  color: inherit;
}

// Use regular font for the heading in the navbar
.title-area h1 {
  font-family: $body-font-family;
  letter-spacing: normal;
}


.hero {
  min-height: 100vh;
  .f-topbar-fixed & {
    // When topbar is active, it applies .f-topbar-fixed to <body>,
    // adding a padding-top. Counteract that in our height.
    min-height: calc(100vh - #{$topbar-height})
  }

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  position: relative;

  background-image: url(../images/hero-bg-small.jpg);
  @media #{$medium-up} {
    background-image: url(../images/hero-bg-medium.jpg);
  }
  @media #{$large-up} {
    background-image: url(../images/hero-bg-large.jpg);    
  }
  @media #{$xlarge-up} {
    background-image: url(../images/hero-bg-xlarge.jpg);
  }
  @media #{$xxlarge-up} {
    background-image: url(../images/hero-bg-xxlarge.jpg);    
  }
  @include retina {
    background-image: url(../images/hero-bg-small@2x.jpg);
    @media #{$medium-up} {
      background-image: url(../images/hero-bg-medium@2x.jpg);
    }
    @media #{$large-up} {
      // Serve the full-size image
      background-image: url(../images/hero-bg-xxlarge.jpg);    
    }
    // No retina xlarge and xxlarge -- the picture
    // doesn't have enough pixels for that.
  }


  //background-image: url(/images/hero-bg@2x.jpg);
  
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;

  color: white;

  h1 {
    color: white;
  }

  sup {
    color: #ccc;
  }

  // At non-small sizes, place the title nicely w/r/t
  // the background image.
  @media #{$medium-up} { 
    & .row {
      margin-left: 5%;
    }

    & > :first-child {
      margin-top: 75px;
    }
  }
}

.disclaimer {
  @extend small;
  color: #ddd;
}

.safari-download-button {
  margin-right: 10px;
}

@mixin semicircle($width) {
  width: $width;
  height: $width/2;
  border-top-left-radius: $width;
  border-top-right-radius: $width;
  
  position: absolute;
  bottom: rem-calc(0px);
  left: calc(50% - #{$width}/2);
}

$more-width-small: rem-calc(100px);
$more-width-medium-up: rem-calc(175px);

.hero-more {
  display: block;

  background-color: rgb(3, 66, 107); //blueish
  opacity: 0.8;
  mix-blend-mode: overlay;
  
  fill: #ddd;

  display: flex;
  align-items: center;
  justify-content: center;

  font-style: italic;

  @include semicircle($more-width-small);
  &:hover {
    transform: scale(1.2);
  }

  svg {
    // smaller arrow on small screen
    transform: scale(0.8);
  }
  @media #{$medium-up} {
    @include semicircle($more-width-medium-up);
    svg {
      transform: scale(1.0);
    }
  }

  transition: transform 0.2s ease-in-out;
  cursor: pointer;  
}

.disclaimer {
  position: absolute;
  bottom: ($more-width-small/2);
  padding-bottom: rem-calc(30px);
  @media #{$medium-up} {
    bottom: 0px;
  }
}


.about-markdown {
  padding-top: 20vh; // because the hero is 80vh
  padding-bottom: 20vh;
  //min-height: 40vh;

  display: flex;
  flex-direction: column;
  justify-content: center;

  background-color: white;

  // background-color: #f2f2f2;  
  border-color: #d8d8d8;
  border-width: 1px;
  // border-top-style: solid;
  border-bottom-style: solid;
}

.howto-title, .howto-text {
  @include grid-column(
    $columns: 12,
    $last-column: true,
    $offset: 0
    );

  @media #{$large-up} {
    @include grid-column($columns: 10, $last-column: true, $offset: 1);
  }
}

.howto-code {
  @include panel();
}

.faq-section-title, .faq-question, .faq-answer {
  @include grid-column(
    $columns: 12  ,
    $last-column: true,
    $offset: 0
    );
  @media #{$large-up} {
    @include grid-column($columns: 10, $last-column: true, $offset: 1);
  }  
}

.footer {
  padding: rem-calc(40px) 0;
  margin-top: rem-calc(40px);

  background-color: $topbar-bg-color;
}

.footer-text {
  @include grid-row();

  > p {
    @include grid-column($columns: 12, $last-column: true);
    text-align: center;    
    color: #AAA;
  }

  a {
    color: $topbar-link-color;
  }
}





